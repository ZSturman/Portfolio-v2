# Upstream definition for the old portfolio (v1)
upstream zs_portf {
    server www.zsdynamics.com:8000;
}

# Upstream definition for the new portfolio (v2)
upstream zs_portf_v2 {
    server 127.0.0.1:8001;
}

# Server block to redirect HTTP (port 80) traffic to HTTPS for the main domain
server {
    listen 80;
    server_name zsdynamics.com;
    return 301 https://www.zsdynamics.com$request_uri;
}

# Server block to redirect HTTP (port 80) traffic to HTTPS for the www subdomain
server {
    listen 80;
    server_name www.zsdynamics.com;
    return 301 https://www.zsdynamics.com$request_uri;
}

# Main server block handling HTTPS (port 443) traffic
server {
    listen 443 ssl;
    server_name zsdynamics.com www.zsdynamics.com;

    # SSL configuration
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_certificate /etc/letsencrypt/live/www.zsdynamics.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.zsdynamics.com/privkey.pem;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Redirect non-www to www
    if ($host = zsdynamics.com) {
        return 301 https://www.zsdynamics.com$request_uri;
    }

    # Location block for the root URL, serving the new portfolio (v2)
    location / {
        proxy_pass http://zs_portf_v2;
        include /etc/nginx/proxy_params;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    # Location block to serve the old portfolio (v1) when accessing /outdated_portfolio
    location /outdated_portfolio {
        proxy_pass http://zs_portf;
        include /etc/nginx/proxy_params;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    # Protecting .env files from being accessed
    location ~ /\.env {
        error_page 403 = /handle_403;
        deny all;
    }

    # Custom 403 error handling
    error_page 403 /403_error;
    location /403_error {
        proxy_pass http://127.0.0.1:8000/errors/403;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Custom 404 error handling
    error_page 404 /404_error;
    location /404_error {
        proxy_pass http://127.0.0.1:8000/errors/404;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
